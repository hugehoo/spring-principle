plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'

    // kafka
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'io.confluent:kafka-avro-serializer:7.0.1'}

test {
    useJUnitPlatform()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
generateAvroJava {
    source("src/main/resources/avro/")
    include("**/*.avsc")
    outputDir = file("build/generated/avro-java")
}

avro {
    fieldVisibility = "PRIVATE"
    outputCharacterEncoding = "UTF-8"
}


//tasks.named('test') {
//    useJUnitPlatform()
//}
